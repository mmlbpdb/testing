name: dotnet package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    #strategy:
    #  matrix:
    #    dotnet-version: ['3.0', '3.1.x', '5.0.x' ]

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v3
      #- name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      #  uses: actions/setup-dotnet@v3
      #  with:
      #    dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: Install Dotnet coverage
        run: dotnet tool install --global dotnet-coverage
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"mmlbpdb_testing" /o:"testorg561" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.log.level=Debug
          dotnet build --no-restore --no-incremental
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      - name: readDir2
        run: ls -lR 
       - name: Upload a Build Artifact
         uses: actions/upload-artifact@v2.2.2
         with:
           # Artifact name
           name: buildresult #.zip will be added automatically
           path: **/coverage.xml
           #path: /home/runner/work/testing/testing/ClassLibrary/bin/Release/net462/*.*